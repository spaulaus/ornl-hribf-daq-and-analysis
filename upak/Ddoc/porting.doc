RPD$075066
CHP$Porting to gnu Fortran - In DDgnu directory - WTM
TPF$
SP2$
ODP$
o......It doesn't like: IWD='name' unless IWD is a character.
ODP$
o......But it does accept DATA IWD/'name'/ when IWD is INTEGER.
ODP$
o......It doesn't like: IF(KMD.EQ.'name') unless KMD is a character
ODP$
o......It doesn't like: IF(TST.EQ.'0D'X)... You can set TST='0D'X
however. It just seems not to accept hex constants in IF-statements.
It also doesn't like hex-constants in arithmatic expressions but does
accept in simple replacement statements such as II='8001'X.
ODP$
o......Fortunately it accepts equivalences of different data types.
ODP$
o......GETARG works!
ODP$
o......It doesn't support ENCODE & DECODE - I have already replaced
some of that anyway.
ODP$
o......There are lots of unsupported OPEN parameters - it gives you
a list and you pick out your own violation.
ODP$
o......You need to do variable definitions (typing, equivalencing, etc)
prior to any associated DATA assignments.
ODP$
o......It wants C-subroutine names (referenced by FORTRAN) to be 
followed by TWO underscores rather than ONE.
ODP$
o......Replace any hex-assgnments in DATA statements CHARACTER strings
where appropriate.
ODP$
o......EOFSTAT changed to return 0/1 instead of 'NO  '/'YES '.
ODP$
o......In COMMON/LLL/, LISFLG & MSGF changed from INTEGER*4 to CHARACTER*4
ODP$
o......Helpfile flag IHEPF changed from type INTEGER*4 to CHARACTER*4
ODP$
o......There doesn't seem to be a compiler option to make all variables
"static" - it accepts -static but has no effect that I can tell.
It doesn't accept -save as the Intel does. You have to put a SAVE in
each subroutine if needed.
ODP$
o......It doesn't support STRUCTURES but simple 1-D and 2-D arrays
work fine for what I used them for - only in X-lib related stuff.
ODP$
o......It doesn't like II=JJ.AND.KK - you must use II=IAND(JJ,KK).
ODP$
o......It doesn't accept the "third argument" in CRTL/Z handler.
Ask MCSQ about this.
ODP$
o......It doesn't accept DISP='DELETE' in OPEN statements but does 
accept it in CLOSE statements.
ODP$
0......There is a subtle between an ENCODE and an INTERNAL WRITE.
The ENCODE disturbes no more characters than specified whereas
the INTERNAL WRITE must at least supply a terminating byte.
I'll check the detail later but it's something to remember!!
QIT$
